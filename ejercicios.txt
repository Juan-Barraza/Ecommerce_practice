Crea una clase Producto con atributos como nombre, precio, descripción, etc. Crea métodos para obtener y modificar esos atributos. Crea también un método impuestos() que aplique impuestos al precio del producto.
2. Crea una clase Carrito que contenga una lista de productos. Crea métodos para añadir y eliminar productos, calcular el total del carrito e impuestos, vaciar el carrito, etc.
3. Crea una clase Usuario con atributos como nombre, dirección, historial de compras, etc. La clase debería tener métodos para registrar pedidos, mostrar historial de compras, calcular gasto total del usuario, etc.
5. Crea una clase Pedido que contenga información sobre los productos pedidos, la fecha y hora, el total pagado, el estado del pedido, etc. Debería tener métodos para actualizar el estado del pedido.
6. Crea una jerarquía de excepciones específicas para el ecommerce, como SinStockException PagoRechazadoException, DespachoFallidoException, etc. Usa esas excepciones para manejar errores.
7. Implementa el patrón singleton para garantizar una única instancia de clases como Carrito o UserSession.
8. Crea una interfaz Despachable y distintas clases que la implementen según el tipo de despacho: DespachoNormal, DespachoExpress, etc. Todas deben implementar el método despachar().
9. Implementa una fábrica de productos que genere objetos Producto de distintos tipos: Liviano, Pesado, Refrigerado, etc. en función de parámetros.
10. Utiliza herencia para crear distintos tipos de productos con características especiales: Perecedero, Frágil, Peligroso, etc.
Crea una API REST simulada con Flask que exponga recursos de Productos, Usuarios, Carrito y Pedidos. Implementa métodos GET, POST, PUT y DELETE.